using Game.Components;
using Unity.Burst;
//using Unity.Burst;
using Unity.Collections;
using Unity.Entities;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.Transforms;
using UnityEngine;

namespace Game.Systems
{
    public class MoveForwardSystem : JobComponentSystem
    {
        //
        // for bullet move forward add int flag for disabling, move forward and then disable 
        
        protected override JobHandle OnUpdate(JobHandle inputDeps)
        {
            var moveForwardJob = new MoveForwardJob
            {
                dt = Time.deltaTime
            };
            var moveForwardJobHandle = moveForwardJob.Schedule(this, inputDeps);
            return moveForwardJobHandle;
        }
        
        [BurstCompile]
        [ExcludeComponent(typeof(Disabled))]
        struct MoveForwardJob : IJobForEach<Translation, Rotation, MoveSpeed>
        {
            public float dt;
            
            public void Execute(ref Translation c0, ref Rotation c1, ref MoveSpeed c2)
            {
                c0.Value = c0.Value + (dt * c2.Value * math.forward(c1.Value));
            }
        }
        
    }
}
